% Generated by roxygen2 (4.0.2): do not edit by hand
\name{warp.points}
\alias{warp.points}
\title{Warp a SpatialPoints or SpatialPointsDataFrame object according a to cartogram transform}
\usage{
warp.points(pts, warper)
}
\arguments{
\item{pts}{a \code{SpatialPoints} or \code{SpatialPointsDataFrame} object to be transformed}

\item{warper}{a \code{SpatialPolygonsDataFrame} or \code{SpatialPolygons} object resulting from a previous \code{quick.carto} evocation}
}
\value{
a \code{SpatialPoints} or \code{SpatialPointsDataFrame} object resulting from the transformation.
}
\description{
Given a \code{SpatialPoints} or \code{SpatialPointsDataFrame} object,  apply a cartogram transform
according to the transform grid of a \code{SpatialPolygonsDataFrame} created via \code{quick.carto}
The returned values is the transformed \code{SpatialPoints} or \code{SpatialPointsDataFrame}.
}
\examples{
# Make a cartogram for Georgia counties
data(georgia)
georgia.carto <- quick.carto(georgia2,georgia2$TotPop90)

# Create a set of 25 points from northwest to southeast corners
xl <- seq(1419424,939220.7,l=25)
yl <- seq(905508,1405900,l=25)
pset <- readWKT(paste("MULTIPOINT(",paste(apply(cbind(xl,yl),1,function(x) paste("(",x[1],x[2],")")),collapse=","),")"))
#' #  Transform it
pset.carto <- warp.points(pset,georgia.carto)

# Plot the original points
par(mfrow=c(2,1),mar=c(0.5,0.5,3,0.5))
plot(georgia2,border='grey'); plot(pset, add=T, col='red')
title('Original projection')

# Plot in cartogram space
plot(georgia.carto,border='grey'); plot(pset.carto, add=T, col='red')
title('Cartogram projection')
}
\references{
A Diffusion-based method for producing density equalizing maps, Michael T. Gastner and M. E. J. Newman, Proc. Natl. Acad. Sci. USA 101, 7499-7504 (2004)
}
\seealso{
Other transformers: \code{\link{carto.transform}};
  \code{\link{quick.carto.transform}};
  \code{\link{warp.lines}}; \code{\link{warp.polys}}
}
\keyword{cartogram}

