{"name":"Getcartr","tagline":"Front end for rcartogram","body":"A Front End For the Rcartogram Package\r\n======================================\r\n\r\nThis demonstrates the *getcartr* package. Firstly load it:\r\n\r\n    library(getcartr)\r\n\r\n`quick.carto` gives you a cartogram very quickly:\r\n\r\n    data(georgia)\r\n    georgia.carto <- quick.carto(georgia,georgia2$TotPop90)\r\n    par(mfrow=c(1,2),mar=c(0.5,0.5,3,0.5))\r\n    plot(georgia2)\r\n    title(\"Original Projection\")\r\n    plot(georgia.carto)\r\n    title(\"Cartogram Projection\")\r\n\r\n\r\nand plot the transformation mesh:\r\n\r\n    # Load an example SpatialPolygonsDataFrame from GISTools\r\n    data(georgia)\r\n    # Create the cartogram.  TotPop90 contains 1990 county populations\r\n    # \"georgia2\" is used as it has a plane projection coordinate system\r\n    georgia.carto <- quick.carto(georgia2,georgia2$TotPop90)\r\n    # Draw the mesh\r\n    mesh(georgia.carto)\r\n\r\n\r\nand apply the cartogram transform to new sets of points:\r\n\r\n    # Create a set of 25 points from northwest to southeast corners\r\n    xl <- seq(1419424,939220.7,l=25)\r\n    yl <- seq(905508,1405900,l=25)\r\n    pset <- readWKT(paste(\"MULTIPOINT(\",paste(apply(cbind(xl,yl),1,function(x) paste(\"(\",x[1],x[2],\")\")),collapse=\",\"),\")\"))\r\n    #' #  Transform it\r\n    pset.carto <- warp.points(pset,georgia.carto)\r\n\r\n    # Plot the original points\r\n    par(mfrow=c(1,2),mar=c(0.5,0.5,3,0.5))\r\n    plot(georgia2,border='grey'); plot(pset, add=T, col='red')\r\n    title('Original projection')\r\n\r\n    # Plot in cartogram space\r\n    plot(georgia.carto,border='grey'); plot(pset.carto, add=T, col='red')\r\n    title('Cartogram projection')\r\n\r\nor lines:\r\n\r\n    # Create a line from southwest to northeast corners,  with 100 segments\r\n    xl <- seq(939220.7,1419424,l=100)\r\n    yl <- seq(905508,1405900,l=100)\r\n    aline <- readWKT(paste(\"LINESTRING(\",paste(apply(cbind(xl,yl),1,function(x) paste(x[1],x[2])),collapse=\",\"),\")\"))\r\n\r\n    #  Transform it\r\n    aline.carto <- warp.lines(aline,georgia.carto)\r\n\r\n    # Plot the original line\r\n    par(mfrow=c(1,2),mar=c(0.5,0.5,3,0.5))\r\n    plot(georgia2,border='grey'); plot(aline, add=T, col='red')\r\n    title('Original projection')\r\n\r\n    # Plot in cartogram space\r\n    plot(georgia.carto,border='grey'); plot(aline.carto, add=T, col='red')\r\n    title('Cartogram projection')\r\n\r\n\r\n... or areas.\r\n\r\n    # Create a pseudocircle with 100 segments\r\n    xl <- cos(seq(0,2*pi,l=100))*100000 + 1239348\r\n    yl <- sin(seq(0,2*pi,l=100))*100000 + 1093155\r\n    circ <- readWKT(paste(\"MULTIPOLYGON(((\",paste(apply(cbind(xl,yl),1,function(x) sprintf(\"%7.0f %7.0f\",x[1],x[2])),collapse=\",\"),\")))\"))\r\n    #' #  Transform it\r\n    circ.carto <- warp.polys(circ,georgia.carto)\r\n\r\n    # Plot the original circle\r\n    par(mfrow=c(1,2),mar=c(0.5,0.5,3,0.5))\r\n    plot(georgia2,border='grey'); plot(circ, add=T, col=rgb(1,0,0,0.4), border=NA)\r\n    title('Original projection')\r\n\r\n    # Plot in cartogram space\r\n    plot(georgia.carto,border='grey'); plot(circ.carto, add=T, col=rgb(1,0,0,0.4), border=NA)\r\n    title('Cartogram projection')\r\n\r\n\r\nAlternative approach\r\n====================\r\n\r\nUse the `carto.transform` function to create a new *function* to apply\r\nthe cartogram transform to any shapefile. This function automatically\r\ndetermines whether the input object is `SpatialPolygons*`,\r\n`SpatialLines*` or `SpatialPoints*`. Here the Newhaven data in\r\n`GISTools` will be used:\r\n\r\n    # Get the newhaven data\r\n    require(GISTools)\r\n    data(newhaven)\r\n    # Plot the untransformed data\r\n    par(mfrow=c(1,2),mar=c(0.5,0.5,3,0.5))\r\n    plot(blocks) # Census blocks\r\n    plot(roads,col='lightgrey',add=TRUE) # Roads\r\n    plot(burgres.f,col='darkred',pch=16,add=TRUE) # Forced entry burglaries\r\n\r\n    # Create the cartogram transform function\r\n    to.carto <- carto.transform(blocks,blocks$POP1990)\r\n\r\n    # Now create a cartogram version of the map\r\n    # Plot the blocks carto\r\n    plot(to.carto(blocks))\r\n    # Add roads,  transformed to cartogram space\r\n    plot(to.carto(roads),add=TRUE,col='lightgrey')\r\n    # Add forced entry residential burglaries, transformed to cartogram space\r\n    plot(to.carto(burgres.f),add=TRUE,col='darkred',pch=16)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}